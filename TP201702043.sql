--CREATE TABLE CUSTOMER
--    (CNO NUMBER(10) PRIMARY KEY,
--    NAME VARCHAR2(20) NOT NULL,
--    PASSWD VARCHAR2(15) NOT NULL,
--    EMAIL VARCHAR2(25) UNIQUE NOT NULL
--    );
--    
--CREATE TABLE EBOOK
--    (ISBN NUMBER(10) PRIMARY KEY,
--    TITLE VARCHAR2(60),
--    PUBLISHER VARCHAR2(20),
--    YEAR CHAR(4),
--    CNO NUMBER(10) NOT NULL,
--    EXT_TIMES NUMBER(2),
--    DATE_RENTED DATE,
--    DATE_DUE DATE,
--    
--    CHECK (DATE_RENTED <= DATE_DUE),
--    CONSTRAINT EBOOK_FK FOREIGN KEY(CNO) REFERENCES CUSTOMER(CNO) ON DELETE SET NULL
--    );
--    
--CREATE TABLE AUTHORS
--    (ISBN NUMBER(10) NOT NULL,
--    AUTHOR VARCHAR2(20),
--    
--    CONSTRAINT AUTHORS_PK PRIMARY KEY(ISBN, AUTHOR),
--    CONSTRAINT AUTHORS_FK FOREIGN KEY(ISBN) REFERENCES EBOOK(ISBN) ON DELETE CASCADE
--    );
--    
--CREATE TABLE RESERVE
--    (ISBN NUMBER(10) NOT NULL,
--    CNO NUMBER(10) NOT NULL,
--    DATE_TIME DATE NOT NULL,
--    
--    CONSTRAINT RESERVE_ISBN_FK FOREIGN KEY(ISBN) REFERENCES EBOOK(ISBN) ON DELETE CASCADE,
--    CONSTRAINT RESERVE_CUSTOMER_FK FOREIGN KEY(CNO) REFERENCES CUSTOMER(CNO) ON DELETE CASCADE,
--    CONSTRAINT RESERVE_PK PRIMARY KEY(ISBN, CNO)
--    );
--    
--CREATE TABLE PREVIOUS_RENTAL
--    (ISBN NUMBER(10) NOT NULL,
--    DATE_RENTED DATE NOT NULL,
--    DATE_RETURNED DATE,
--    CNO NUMBER(10) NOT NULL,
--    
--    CONSTRAINT PREV_RENTAL_PK PRIMARY KEY(ISBN, DATE_RENTED),
--    CONSTRAINT PREV_RENTAL_ISBN_FK FOREIGN KEY(ISBN) REFERENCES EBOOK(ISBN) ON DELETE CASCADE,
--    CONSTRAINT PREV_RENTAL_CNO_FK FOREIGN KEY(CNO) REFERENCES CUSTOMER(CNO) ON DELETE CASCADE
--    );
--
--DESCRIBE CUSTOMER;
--DESCRIBE EBOOK;
--DESCRIBE AUTHORS;
--DESCRIBE RESERVE;
--DESCRIBE PREVIOUS_RENTAL;
--
--
--CREATE VIEW RESINFO AS
--SELECT EBOOK.ISBN, EBOOK.TITLE, CUSTOMER.CNO, CUSTOMER.NAME, CUSTOMER.EMAIL, RESERVE.DATE_TIME
--FROM EBOOK, CUSTOMER, RESERVE
--WHERE EBOOK.ISBN = RESERVE.ISBN
--    AND CUSTOMER.CNO = RESERVE.CNO;

--DROP TABLE CUSTOMER;
--DROP TABLE EBOOK;
--DROP TABLE AUTHORS;
--DROP TABLE PREVIOUSRENTAL;
--DROP TABLE RESERVE;
-- TP - 3
CREATE TABLE Customer
        (
        cno NUMBER(3) NOT NULL, 
        name VARCHAR2(10),
        passwd VARCHAR2(12),
        email VARCHAR2(20),
        CONSTRAINT Customer_PK PRIMARY KEY (cno),
        CONSTRAINT Customer_UQ UNIQUE (email),
        CONSTRAINT CHK_cno CHECK (cno>=0)
        );
        
CREATE TABLE Ebook 
        (
        isbn NUMBER(5) NOT NULL,
        title VARCHAR2(100),
        publisher VARCHAR2(30),
        year DATE,
        cno NUMBER(3),
        extTimes NUMBER(1) CHECK (extTimes>=0 AND extTimes<=2),
        dateRented DATE,
        dateDue DATE,        
        CONSTRAINT Ebook_PK PRIMARY KEY (isbn),
        CONSTRAINT Ebook_FK FOREIGN KEY (cno) REFERENCES Customer(cno)
        );

CREATE TABLE Reserve
       (
        isbn NUMBER(5) NOT NULL,
        cno NUMBER(3) NOT NULL,
        dateTime DATE,
        CONSTRAINT Reserve_PK PRIMARY KEY (isbn,cno),
     CONSTRAINT Reserve_FK1 FOREIGN KEY (isbn) REFERENCES Ebook(isbn),
     CONSTRAINT Reserve_FK2 FOREIGN KEY (cno) REFERENCES Customer(cno)
     );
     
CREATE TABLE PreviousRental
        (
        isbn NUMBER(5) NOT NULL,
        dateRented DATE NOT NULL,
        dateReturned DATE NOT NULL,
        cno NUMBER(3) NOT NULL,
        CONSTRAINT PrevR_PK PRIMARY KEY (isbn,dateRented),
        CONSTRAINT PrevR_FK1 FOREIGN KEY (isbn) REFERENCES Ebook(isbn),
        CONSTRAINT PrevR_FK2 FOREIGN KEY (cno) REFERENCES Customer(cno)
        );
        
CREATE TABLE Authors         
       (
       isbn NUMBER(5) NOT NULL,
       author VARCHAR(30) NOT NULL,
       CONSTRAINT Authors_PK PRIMARY KEY (isbn,author),
       CONSTRAINT Authors_FK FOREIGN KEY (isbn) REFERENCES Ebook(isbn)
       );
       
CREATE VIEW Resinfo AS
    SELECT E.ISBN, E.title, R.dateTime, C.CNO, C.name, C.email
    FROM Reserve R, Customer C, Ebook E
    WHERE R.CNO = C.CNO and  E.ISBN = R.ISBN;
    

-- TP - 4
INSERT INTO EBOOK
VALUES (00000, '작은 별이지만 빛나고 있어', '북로망스', '2021/03/24', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00001, '질서 너머', '웅진지식하우스', '2021/03/23', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00002, '달러구트 꿈 백화점', '팩토리나인', '2020/07/08', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00003, '운의 알고리즘', '소울소사이어티', '2021/04/28', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00004, '공간의 미래', '을유문화사', '2021/04/25', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00005, '미드나잇 라이브러리', '인플루엔셜', '2021/04/28', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00006, '애터미 DNA', '중앙북스', '2021/04/10', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00007, '아들아 돈 공부해야 한다', '알에이치코리아', '2021/03/25', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00008, '안녕, 소중한 사람', '북로망스', '2020/09/16', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00009, '아몬드', '창비', '2017/03/31', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00010, '소년과 개', '창심소', '2021/02/02', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00011, '시선으로부터,', '문학동네', '2020/06/05', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00012, '데미안', '더스토리', '2017/10/30', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00013, '나미야 잡화점의 기적', '현대문학', '2012/12/19', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00014, '연금술사', '문학동네', '2001/12/01', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00015, '요리코를 위해', '모모', '2020/03/04', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00016, '모순', '쓰다', '2013/04/01', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00017, '아가씨와 밤', '밝은세상', '2018/11/26', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00018, '봉제인형 살인사건', '북플라자', '2017/10/20', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00019, '돌이킬 수 없는 약속', '북플라자', '2017/02/02', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00020, '무조건 팔리는 카피 단어장', '동양북스', '2021/03/22', NULL, 0, NULL, NULL);

INSERT INTO EBOOK 
VALUES (00021, '적을 만들지 않는 대화법', '갈매나무', '2015/03/23', 000, 0, '2021/05/16', '2021/05/26');

INSERT INTO EBOOK 
VALUES (00022, '청춘, 거침없이 달려라', '국일미디어', '2013/03/15', 001, 0, '2021/05/15', '2021/05/25');

INSERT INTO EBOOK 
VALUES (00023, '나는 오늘도 나를 응원한다', '비즈니스북스', '2011/06/07', 002, 1, '2021/05/09', '2021/05/29');

INSERT INTO EBOOK 
VALUES (00024, '불타는 구두를 신어라', '21세기북스', '2013/03/11', 003, 2, '2021/05/02', '2021/06/01');

INSERT INTO EBOOK 
VALUES (00025, '립잇업', '웅진지식하우스', '2013/04/15', 004, 2, '2021/05/05', '2021/06/04');

--DELETE FROM EBOOK
--WHERE ISBN = 21;



INSERT INTO AUTHORS
VALUES (00000, '소윤');

INSERT INTO AUTHORS
VALUES (00000, '길수');

INSERT INTO AUTHORS
VALUES (00000, '봉수');

INSERT INTO AUTHORS
VALUES (00001, '조던 피터슨');

INSERT INTO AUTHORS
VALUES (00002, '이미예');

INSERT INTO AUTHORS
VALUES (00003, '정회도');

INSERT INTO AUTHORS
VALUES (00004, '유현준');

INSERT INTO AUTHORS
VALUES (00005, '매트 헤이그');

INSERT INTO AUTHORS
VALUES (00006, '박한길');

INSERT INTO AUTHORS
VALUES (00007, '정선용');

INSERT INTO AUTHORS
VALUES (00008, '정한경');

INSERT INTO AUTHORS
VALUES (00009, '손원평');

INSERT INTO AUTHORS
VALUES (00010, '하세 세이슈');

INSERT INTO AUTHORS
VALUES (00011, '정세랑');

INSERT INTO AUTHORS
VALUES (00012, '헤르만 헤세');

INSERT INTO AUTHORS
VALUES (00013, '히가시노 게이고');

INSERT INTO AUTHORS
VALUES (00014, '파울로 코엘료');

INSERT INTO AUTHORS
VALUES (00015, '노리즈키 린타로');

INSERT INTO AUTHORS
VALUES (00016, '양귀자');

INSERT INTO AUTHORS
VALUES (00017, '기욤 뮈소');

INSERT INTO AUTHORS
VALUES (00018, '다니엘 콜');

INSERT INTO AUTHORS
VALUES (00019, '야쿠마루 가쿠');

INSERT INTO AUTHORS
VALUES (00020, '간다 마사노리');

INSERT INTO AUTHORS
VALUES (00020, '기누타 쥰이치');

INSERT INTO AUTHORS
VALUES (00021, '샘 혼');

INSERT INTO AUTHORS
VALUES (00022, '강남구');

INSERT INTO AUTHORS
VALUES (00023, '마리사 피어');

INSERT INTO AUTHORS
VALUES (00024, '김원길');

INSERT INTO AUTHORS
VALUES (00025, '리처드 와이즈먼');




INSERT INTO CUSTOMER
VALUES (000, '류건열', 'fbrjsduf1', 'rjsduf0503@naver.com');

INSERT INTO CUSTOMER
VALUES (001, '전병민', 'wjsqudals1', 'qudals0000@naver.com');

INSERT INTO CUSTOMER
VALUES (002, '김민수', 'rlaalstn1', 'alstn88888@naver.com');

INSERT INTO CUSTOMER
VALUES (003, '고길동', 'rhrlfehd1', 'rlfehd1111@naver.com');

INSERT INTO CUSTOMER
VALUES (004, '이지혁', 'dlwlgur1', 'wlgur1515@naver.com');

INSERT INTO CUSTOMER
VALUES (005, '김택영', 'rlaxordud1', 'xordud7878@naver.com');

INSERT INTO CUSTOMER
VALUES (006, '유호진', 'dbghwls1', 'ghwls987@naver.com');

INSERT INTO CUSTOMER
VALUES (007, '정상수', 'wjdtkdtn1', 'constant11@naver.com');

INSERT INTO CUSTOMER
VALUES (008, '원종혁', 'dnjswhdgur1', 'whdgur555@naver.com');

INSERT INTO CUSTOMER
VALUES (009, '백범준', 'qorqjawns1', 'whitetiger@naver.com');




INSERT INTO RESERVE
VALUES (00021, 009, '2021/05/17');

INSERT INTO RESERVE
VALUES (00021, 008, '2021/05/18');

INSERT INTO RESERVE
VALUES (00021, 007, '2021/05/19');

INSERT INTO RESERVE
VALUES (00023, 000, '2021/05/10');

INSERT INTO RESERVE
VALUES (00023, 001, '2021/05/15');

INSERT INTO RESERVE
VALUES (00023, 005, '2021/05/16');




INSERT INTO PREVIOUSRENTAL
VALUES (00000, '2021/03/31', '2021/04/10', 000);
INSERT INTO PREVIOUSRENTAL
VALUES (00001, '2021/04/20', '2021/04/30', 000);

INSERT INTO PREVIOUSRENTAL
VALUES (00002, '2021/01/13', '2021/01/23', 007);

INSERT INTO PREVIOUSRENTAL
VALUES (00008, '2020/12/14', '2020/12/24', 003);

INSERT INTO PREVIOUSRENTAL
VALUES (00010, '2021/02/10', '2021/03/02', 008);

INSERT INTO PREVIOUSRENTAL
VALUES (00014, '2020/05/06', '2020/05/16', 004);







-- 5-1
SELECT P.CNO 회원번호, P.DATERETURNED-P.DATERENTED "대여 기간"
FROM EBOOK E JOIN PREVIOUSRENTAL P
ON (E.ISBN = P.ISBN)
ORDER BY "대여 기간" DESC;

-- 5-2
SELECT
    CASE GROUPING(ISBN)
    WHEN 1 THEN SUM(ISBN)
    ELSE ISBN END AS ISBN,
    COUNT(*) "예약 건수"
FROM RESERVE
GROUP BY ROLLUP (ISBN);

-- 5-3
SELECT P.CNO, C.NAME, P.ISBN, P.DATERENTED,
    FIRST_VALUE(P.ISBN) OVER
    (PARTITION BY P.CNO ORDER BY P.DATERENTED DESC
    ROWS UNBOUNDED PRECEDING) AS "회원이 가장 최근 대여한 도서"
FROM PREVIOUSRENTAL P, CUSTOMER C
WHERE P.CNO = C.CNO;